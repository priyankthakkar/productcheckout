// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Banner Component Banner should match its snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Banner
    message="This is a sample message"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <h6>
        <Alert
          closeAriaLabel="Close"
          color="info"
          fade={true}
          isOpen={true}
          tag="div"
          transition={
            Object {
              "appear": true,
              "baseClass": "fade",
              "baseClassActive": "show",
              "enter": true,
              "exit": true,
              "in": true,
              "mountOnEnter": false,
              "onEnter": [Function],
              "onEntered": [Function],
              "onEntering": [Function],
              "onExit": [Function],
              "onExited": [Function],
              "onExiting": [Function],
              "tag": "div",
              "timeout": 150,
              "unmountOnExit": true,
            }
          }
        >
          <i
            className="fa fa-info-circle"
          />
           This is a sample message
        </Alert>
      </h6>,
      "className": "d-flex justify-content-center align-items-center",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Alert
          closeAriaLabel="Close"
          color="info"
          fade={true}
          isOpen={true}
          tag="div"
          transition={
            Object {
              "appear": true,
              "baseClass": "fade",
              "baseClassActive": "show",
              "enter": true,
              "exit": true,
              "in": true,
              "mountOnEnter": false,
              "onEnter": [Function],
              "onEntered": [Function],
              "onEntering": [Function],
              "onExit": [Function],
              "onExited": [Function],
              "onExiting": [Function],
              "tag": "div",
              "timeout": 150,
              "unmountOnExit": true,
            }
          }
        >
          <i
            className="fa fa-info-circle"
          />
           This is a sample message
        </Alert>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <i
              className="fa fa-info-circle"
            />,
            " This is a sample message",
          ],
          "closeAriaLabel": "Close",
          "color": "info",
          "fade": true,
          "isOpen": true,
          "tag": "div",
          "transition": Object {
            "appear": true,
            "baseClass": "fade",
            "baseClassActive": "show",
            "enter": true,
            "exit": true,
            "in": true,
            "mountOnEnter": false,
            "onEnter": [Function],
            "onEntered": [Function],
            "onEntering": [Function],
            "onExit": [Function],
            "onExited": [Function],
            "onExiting": [Function],
            "tag": "div",
            "timeout": 150,
            "unmountOnExit": true,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-info-circle",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          " This is a sample message",
        ],
        "type": [Function],
      },
      "type": "h6",
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "rules": Array [
          "
  padding: 0.625rem;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <h6>
          <Alert
            closeAriaLabel="Close"
            color="info"
            fade={true}
            isOpen={true}
            tag="div"
            transition={
              Object {
                "appear": true,
                "baseClass": "fade",
                "baseClassActive": "show",
                "enter": true,
                "exit": true,
                "in": true,
                "mountOnEnter": false,
                "onEnter": [Function],
                "onEntered": [Function],
                "onEntering": [Function],
                "onExit": [Function],
                "onExited": [Function],
                "onExiting": [Function],
                "tag": "div",
                "timeout": 150,
                "unmountOnExit": true,
              }
            }
          >
            <i
              className="fa fa-info-circle"
            />
             This is a sample message
          </Alert>
        </h6>,
        "className": "d-flex justify-content-center align-items-center",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Alert
            closeAriaLabel="Close"
            color="info"
            fade={true}
            isOpen={true}
            tag="div"
            transition={
              Object {
                "appear": true,
                "baseClass": "fade",
                "baseClassActive": "show",
                "enter": true,
                "exit": true,
                "in": true,
                "mountOnEnter": false,
                "onEnter": [Function],
                "onEntered": [Function],
                "onEntering": [Function],
                "onExit": [Function],
                "onExited": [Function],
                "onExiting": [Function],
                "tag": "div",
                "timeout": 150,
                "unmountOnExit": true,
              }
            }
          >
            <i
              className="fa fa-info-circle"
            />
             This is a sample message
          </Alert>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <i
                className="fa fa-info-circle"
              />,
              " This is a sample message",
            ],
            "closeAriaLabel": "Close",
            "color": "info",
            "fade": true,
            "isOpen": true,
            "tag": "div",
            "transition": Object {
              "appear": true,
              "baseClass": "fade",
              "baseClassActive": "show",
              "enter": true,
              "exit": true,
              "in": true,
              "mountOnEnter": false,
              "onEnter": [Function],
              "onEntered": [Function],
              "onEntering": [Function],
              "onExit": [Function],
              "onExited": [Function],
              "onExiting": [Function],
              "tag": "div",
              "timeout": 150,
              "unmountOnExit": true,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa fa-info-circle",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            " This is a sample message",
          ],
          "type": [Function],
        },
        "type": "h6",
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
  padding: 0.625rem;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
